6.51SELECT CLIENT.nom, FACTURA.num_f, FACTURA.data
FROM CLIENT INNER JOIN FACTURA USING (cod_cli)
ORDER BY 1,3;
6.52SELECT CLIENT.nom, LINIA_FAC.cod_a, ARTICLE.descrip
FROM CLIENT
INNER JOIN FACTURA USING (cod_cli)
INNER JOIN LINIA_FAC USING(num_f)
INNER JOIN ARTICLE USING (cod_a)
ORDER BY 1,2;
6.53SELECT DISTINCT CLIENT.nom, LINIA_FAC.cod_a, ARTICLE.descrip
FROM CLIENT
INNER JOIN FACTURA USING (cod_cli)
INNER JOIN LINIA_FAC USING(num_f)
INNER JOIN ARTICLE USING (cod_a)
ORDER BY 1,2;
6.54SELECT CLIENT.nom, count(FACTURA.num_f)
FROM FACTURA INNER JOIN CLIENT USING (cod_cli)
GROUP BY CLIENT.nom
ORDER BY 2 DESC;
6.55SELECT num_f, FACTURA.data, FACTURA.cod_cli, SUM(preu*quant),
SUM(preu*quant*(1-(COALESCE(LINIA_FAC.dte,0)/100)))
FROM LINIA_FAC INNER JOIN FACTURA USING(num_f)
GROUP BY num_f, FACTURA.data, FACTURA.cod_cli
ORDER BY 1;
6.56SELECT num_f, FACTURA.data, FACTURA.cod_cli, SUM(preu*quant) as import,
SUM(preu*quant*(1-(COALESCE(LINIA_FAC.dte,0)/100))) as descompte_1,
SUM(preu*quant*(1-(COALESCE(LINIA_FAC.dte,0)/100))*(1-
(COALESCE(FACTURA.dte,0)/100))) as descompte_2
FROM LINIA_FAC INNER JOIN FACTURA USING(num_f)
GROUP BY num_f, FACTURA.data, FACTURA.cod_cli
ORDER BY 1;
6.57SELECT SUPERVISOR.cod_ven, SUPERVISOR.nom, count(VENEDOR.*)
FROM VENEDOR SUPERVISOR INNER JOIN VENEDOR on
SUPERVISOR.cod_ven=VENEDOR.cod_cap
GROUP BY SUPERVISOR.cod_ven, SUPERVISOR.nom
ORDER BY 1;
6.58SELECT LINIA_FAC.cod_a, ARTICLE.descrip, COUNT (*), SUM(quant), AVG(quant)
FROM LINIA_FAC
INNER JOIN ARTICLE USING(cod_a)
GROUP BY LINIA_FAC.cod_a, ARTICLE.descrip
ORDER BY 4 DESC, 1;




6.59SELECT CATEGORIA.cod_cat, CATEGORIA.descripcio, SUM(quant)
FROM CATEGORIA INNER JOIN ARTICLE USING(cod_cat)
INNER JOIN LINIA_FAC USING(cod_a)
GROUP BY CATEGORIA.cod_cat, CATEGORIA.descripcio HAVING SUM(quant) >100
ORDER BY 3 DESC;
6.60SELECT CLIENT.cod_cli, CLIENT.nom
FROM CLIENT LEFT JOIN FACTURA ON CLIENT.cod_cli=FACTURA.cod_cli
WHERE FACTURA.num_f IS NULL
ORDER BY 1;
6.61SELECT ARTICLE.cod_a, ARTICLE.descrip, sum(COALESCE(LINIA_FAC.quant,0))
FROM ARTICLE LEFT JOIN LINIA_FAC ON ARTICLE.cod_a=LINIA_FAC.cod_a
GROUP BY ARTICLE.cod_a, ARTICLE.descrip
ORDER BY 1;
6.62SELECT POBLE.cod_pob, POBLE.nom, count(CLIENT.*)
FROM POBLE LEFT JOIN CLIENT ON POBLE.cod_pob=CLIENT.cod_pob
GROUP BY POBLE.cod_pob, POBLE.nom
ORDER BY 3 DESC;
6.63SELECT CATEGORIA.cod_cat, CATEGORIA.descripcio, COUNT(DISTINCT
ARTICLE.cod_a), SUM(quant)
FROM CATEGORIA INNER JOIN ARTICLE USING(cod_cat)
LEFT JOIN LINIA_FAC ON ARTICLE.cod_a=LINIA_FAC.cod_a
GROUP BY CATEGORIA.cod_cat, CATEGORIA.descripcio HAVING
COUNT(DISTINCT ARTICLE.cod_a) > 15
ORDER BY 3 DESC;
6.64SELECT MAX(quantes) AS "Número màxim de factures"
FROM (SELECT COUNT(*) AS quantes FROM FACTURA
GROUP BY COD_CLI) AS F;
6.65SELECT MAX(import) AS "Màxim Import", MIN(import) AS "Mínim Import"
FROM (SELECT SUM(quant*preu) AS import FROM LINIA_FAC
GROUP BY num_f) AS L_F;
6.66SELECT Trimestre, MAX(quantes)
FROM(SELECT TO_CHAR(data,'Q') AS Trimestre, cod_ven, count(*) AS quantes
FROM FACTURA
GROUP BY TO_CHAR(data,'Q'), cod_ven) AS F
GROUP BY Trimestre
ORDER BY 1;
6.67SELECT * FROM ARTICLE
WHERE preu > (SELECT AVG(preu) FROM ARTICLE)
ORDER BY cod_cat, cod_a;
6.68SELECT * FROM ARTICLE A1
WHERE preu > (SELECT AVG(preu) FROM ARTICLE A2 where
A2.cod_cat=A1.cod_cat)
ORDER BY cod_cat, cod_a;






6.69SELECT *
FROM POBLE
WHERE NOT EXISTS (SELECT * FROM VENEDOR WHERE
POBLE.cod_pob=VENEDOR.cod_pob)
AND EXISTS (SELECT * FROM CLIENT WHERE
POBLE.cod_pob=CLIENT.cod_pob)
ORDER BY 1;
6.70SELECT POBLE.cod_pob, POBLE.nom, count(*)
FROM POBLE INNER JOIN VENEDOR USING (cod_pob)
GROUP BY POBLE.cod_pob, POBLE.nom
HAVING count(*) > (SELECT count(*) FROM CLIENT WHERE
POBLE.cod_pob=CLIENT.cod_pob)
ORDER BY 2;
6.71SELECT Trimestre, MAX(import)
FROM (SELECT num_f, TO_CHAR(data,'Q') AS Trimestre, SUM(quant*preu) AS import
FROM LINIA_FAC INNER JOIN FACTURA USING (num_f)
GROUP BY num_f, Trimestre) AS LF
GROUP BY Trimestre
ORDER BY 1;
6.72SELECT nom, COUNT(*),
ROUND(COUNT(*)/(SELECT count(*) FROM FACTURA)::NUMERIC*100,2)
FROM VENEDOR INNER JOIN FACTURA USING (cod_ven)
GROUP BY nom
ORDER BY 1;
6.73SELECT num_f, data, import
FROM FACTURA
INNER JOIN (SELECT num_f, SUM(quant*preu) AS import
FROM LINIA_FAC GROUP BY num_f) AS LF1 USING(num_f)
WHERE import=(SELECT MAX(import)
FROM (SELECT num_f, SUM(quant*preu) AS import
FROM LINIA_FAC GROUP BY num_f) AS LF2);
6.74SELECT cod_cat,VENEDOR.cod_ven, nom,SUM(quant) AS "Unitats Venudes"
FROM VENEDOR,FACTURA,LINIA_FAC,ARTICLE A
WHERE VENEDOR.cod_ven=FACTURA.cod_ven AND
FACTURA.num_f=LINIA_FAC.num_f
AND LINIA_FAC.cod_a=A.cod_a AND cod_cat IS NOT NULL
GROUP BY cod_cat,VENEDOR.cod_ven, nom
HAVING SUM(quant) >= ALL (SELECT SUM(quant)
FROM FACTURA,LINIA_FAC,ARTICLE
WHERE FACTURA.num_f=LINIA_FAC.num_f
AND LINIA_FAC.cod_a=ARTICLE.cod_a
AND cod_cat=A.cod_cat
GROUP BY cod_ven)
ORDER BY cod_cat;











6.75
SELECT nom, 'Venedor'
FROM VENEDOR
WHERE cod_ven IN (SELECT cod_ven FROM FACTURA WHERE
TO_CHAR(data,'Q-YY')='1-15')
UNION
SELECT nom, 'Client'
FROM CLIENT
WHERE cod_cli IN (SELECT cod_cli FROM FACTURA WHERE TO_CHAR(data,'Q-
YY')='1-15')
ORDER BY 1;
6.76a SELECT nom
FROM POBLE
WHERE cod_pob IN (SELECT cod_pob FROM VENEDOR)
UNION
SELECT nom
FROM POBLE
WHERE cod_pob IN (SELECT cod_pob FROM CLIENT)
ORDER BY 1;
6.76b SELECT nom
FROM POBLE
WHERE cod_pob IN (SELECT cod_pob FROM VENEDOR)
INTERSECT
SELECT nom
FROM POBLE
WHERE cod_pob IN (SELECT cod_pob FROM CLIENT)
ORDER BY 1;
6.76c SELECT nom
FROM POBLE
WHERE cod_pob IN (SELECT cod_pob FROM VENEDOR)
EXCEPT
SELECT nom
FROM POBLE
WHERE cod_pob IN (SELECT cod_pob FROM CLIENT)
order by 1;
